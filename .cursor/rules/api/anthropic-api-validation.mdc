# Anthropic API 配置验证规则

## 核心原则
- **API URL必须验证**: 任何使用Anthropic API的代码都必须验证URL返回有效的JSON API响应
- **区分HTML和JSON**: 如果API端点返回HTML而不是JSON，必须立即报错并停止处理
- **密钥和URL配对验证**: API密钥和BASE URL必须配对验证，不能单独测试
- **错误处理透明化**: 当API配置错误时，必须向用户提供明确的错误信息和解决建议

## API URL验证要求

### 必需的验证步骤
1. **响应内容类型检查**: 验证 `Content-Type` 是否为 `application/json`
2. **HTML检测**: 如果响应包含 `<html>` 标签，立即标记为无效API端点
3. **状态码验证**: 200状态码不等于有效API，必须检查响应内容
4. **JSON解析测试**: 尝试解析响应为JSON，失败则报告配置错误

### 常见错误模式
- ❌ **HTML代理页面**: URL返回包含JavaScript的HTML页面
- ❌ **重定向循环**: API请求被重定向到非API页面
- ❌ **认证网关**: 需要浏览器认证的中间页面
- ❌ **混淆脚本**: 包含base64编码或混淆代码的响应

## 代码实现要求

### Claude Provider 错误处理
```python
# 必须包含的验证代码
def validate_api_endpoint(url: str, headers: dict) -> bool:
    """验证API端点是否有效"""
    response = requests.post(url, headers=headers, json=test_payload)
    
    # 检查响应类型
    content_type = response.headers.get('content-type', '').lower()
    if 'text/html' in content_type:
        raise ValueError(f"API端点返回HTML页面，不是有效的API服务: {url}")
    
    # 检查HTML标签
    if '<html' in response.text.lower():
        raise ValueError(f"API响应包含HTML内容，可能是代理页面: {url}")
    
    # 验证JSON解析
    try:
        response.json()
    except ValueError:
        raise ValueError(f"API响应不是有效JSON: {response.text[:200]}")
    
    return True
```

### 环境变量验证
```python
# 必须验证的环境变量组合
required_vars = {
    'ANTHROPIC_API_KEY': '必须以sk-开头的有效密钥',
    'ANTHROPIC_BASE_URL': '必须返回JSON的有效API端点'
}
```

## 错误报告格式

当检测到API配置错误时，必须提供以下信息：
1. **问题描述**: 明确说明检测到的问题类型
2. **当前配置**: 显示当前的API_KEY和BASE_URL值
3. **验证结果**: 详细的验证步骤结果
4. **解决建议**: 提供具体的修复步骤

## 预防措施

### 开发时检查
- 新增API配置时必须先运行验证脚本
- 任何API调用失败都必须检查响应内容类型
- 禁止忽略HTML响应，必须作为配置错误处理

### 用户指南
- API配置变更后立即运行 `test_raw_api.py` 验证
- 记录有效的API端点格式和响应示例
- 维护API配置故障排查清单

---

**注意**: 此规则创建于发现 `https://anyrouter.top` 返回HTML而非JSON API后，旨在防止类似配置错误。