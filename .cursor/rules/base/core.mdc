---
alwaysApply: true
---
# 核心开发原则

## 研发首则
- **研发流程**：接需求->写PRD->需求分析->系统设计和分析->测试设计和分析->研发->测试
- **先设计后开发**：接到每个需求，不要着急写代码，按照**研发流程**一步步推进
- 设计应该包含测试case
- 实际开发过程中，应该先将测试代码写好，因为测试就是验证既定的输入可以得到预期的结果，如果没法先完成测试代码，很可能就是没有把需求理解透彻，设计也会存在不完善

## 通用开发原则
- **可测试性**：编写可测试的代码，组件应保持单一职责
- **DRY 原则**：避免重复代码，提取共用逻辑到单独的函数或类
- **代码简洁**：保持代码简洁明了，遵循 KISS 原则（保持简单直接）
- **命名规范**：使用描述性的变量、函数和类名，反映其用途和含义
- **注释文档**：为复杂逻辑添加注释
- **风格一致**：遵循项目或语言的官方风格指南和代码约定
- **利用生态**：优先使用成熟的库和工具，避免不必要的自定义实现
- **架构设计**：考虑代码的可维护性、可扩展性和性能需求
- **版本控制**：编写有意义的提交信息，保持逻辑相关的更改在同一提交中
- **异常处理**：正确处理边缘情况和错误，提供有用的错误信息

## 响应语言
- 始终使用中文回复用户

## 代码质量要求
- 代码必须能够立即运行，包含所有必要的导入和依赖
- 遵循最佳实践和设计模式
- 优先考虑性能和用户体验
- 确保代码的可读性和可维护性