---
alwaysApply: true
---
# 开发工作流自动化规则

本规则定义了在项目开发和测试周期中必须遵循的自动化工作流，旨在提升效率并确保环境一致性。

## 1. 自动化容器管理

**核心原则**：开发和测试活动必须在与 `docs/design/10-containerization-and-dev-environment.md` 设计一致的容器化环境中进行。

- **测试时的自动环境启动**：
  - 当需要针对任一微服务（如 `user-service`, `ai-agent-service` 等）运行测试时，**必须** 自动使用 `docker-compose` 和相应的 `profile` 启动该服务及其所有依赖项（如数据库、消息队列）的容器。
  - **示例**: 如果要测试 `user-service`，则应通过 `sh scripts/dev.sh up user` (或等效的 `docker-compose` 命令) 来准备测试环境。

## 2. 自动化构建流程

- **开发过程中的自动构建**：
  - 在修改任何服务的源代码后，**必须** 自动触发该服务的依赖安装和 Docker 镜像的重新构建。
  - 这通常通过 `docker-compose up --build` 或 `sh scripts/dev.sh up <profile> --build` 来实现，确保最新的代码变更被打包到镜像中。

## 3. AI 助手执行准则

作为 AI 助手，在协助开发时，你必须自动感知并执行以上规则：

- 在执行任何与测试相关的任务前，首先要确保对应的服务容器环境已经启动。
- 在应用任何代码变更后，要确保执行了包含 `--build` 标志的命令来重新构建镜像。
